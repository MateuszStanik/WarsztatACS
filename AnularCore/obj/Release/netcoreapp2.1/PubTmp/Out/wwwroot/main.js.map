{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/clients/clients.component.html","webpack:///./src/app/clients/clients.component.ts","webpack:///./src/app/clients/clientsDetails.component.html","webpack:///./src/app/clients/clientsDetails.component.ts","webpack:///./src/app/customers/customers.component.html","webpack:///./src/app/customers/customers.component.ts","webpack:///./src/app/guards/auth-guard.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/shared/layout/footer.component.html","webpack:///./src/app/shared/layout/footer.component.ts","webpack:///./src/app/shared/layout/header.component.html","webpack:///./src/app/shared/layout/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,wH;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,+BAAQ,GAAR;IACA,CAAC;IALU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;YAEpB,MAAM,EAAE,EAAE;SACX,CAAC;;OACW,YAAY,CAOxB;IAAD,mBAAC;CAAA;AAPwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACF;AACA;AACb;AACE;AACL;AACC;AACM;AACM;AACK;AACJ;AACJ;AAEH;AACO;AACG;AACY;AACF;AACA;AACP;AACG;AACc;AAoC7E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,mEAAa;gBACb,sEAAc;gBACd,kFAAkB;gBAClB,4DAAY;gBACZ,gFAAe;gBACf,gFAAe;gBACf,yEAAe;gBACf,4EAAgB;gBAChB,0FAAuB;aAExB;YACD,OAAO,EAAE;gBACP,oEAAmB;gBACnB,uEAAa;gBACb,kEAAmB;gBACnB,0DAAW;gBACX,qEAAgB;gBAChB,wDAAU;gBACV,uEAAiB,CAAC,OAAO,EAAE;gBAC3B,4DAAY,CAAC,OAAO,CAAC;oBACnB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mEAAa,EAAE;oBACtC,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yEAAe,EAAE;oBAC9C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,4EAAgB,EAAE;oBAChD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,sEAAc,EAAE;oBAC5C,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kFAAkB,EAAE,WAAW,EAAE,CAAC,oEAAS,CAAC,EAAE;oBAC9E,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,0FAAuB,EAAE;iBAClE,CAAC;gBACF,gEAAW,CAAC,OAAO,EAAE;aACtB;YACD,SAAS,EAAE,CAAC,sDAAS,EAAE,oEAAS,EAAE,qEAAgB,CAAC;YACnD,SAAS,EAAE,CAAC,4DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzDtB,0tBAA0tB,s3IAAs3I,w7G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACArgK;AACD;AACjC;AACY;AAGH;AAMlD;IAqGE,0BAAoB,MAAc,EAAU,IAAgB,EAAU,YAA4B;QAA9E,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAgB;QAjGlG,aAAQ,GAAG;YACT,aAAa,EAAE,IAAI;YACnB,OAAO,EAAE;gBACP,GAAG,EAAE,KAAK;gBACV,IAAI,EAAE,KAAK;gBACX,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,KAAK,EAAE,YAAY,EAAE,CAAC;aAC3D;YACD,OAAO,EAAE;gBACP,QAAQ,EAAE;oBACR,KAAK,EAAE,IAAI;iBACZ;gBACD,IAAI,EAAE;oBACJ,KAAK,EAAE,WAAW;iBACnB;gBACD,QAAQ,EAAE;oBACR,KAAK,EAAE,WAAW;iBACnB;gBACD,KAAK,EAAE;oBACL,KAAK,EAAE,OAAO;iBACf;gBACD,IAAI,EAAE;oBACJ,KAAK,EAAE,QAAQ;iBAChB;gBACD,UAAU,EAAE;oBACV,KAAK,EAAE,cAAc;iBACtB;gBACD,MAAM,EAAE;oBACN,KAAK,EAAE,OAAO;iBACf;gBACD,WAAW,EAAE;oBACX,KAAK,EAAE,YAAY;iBACpB;gBACD,WAAW,EAAE;oBACX,KAAK,EAAE,MAAM;iBACd;aACF;SACF,CAAC;QA2EF,WAAM,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;QAC1B,UAAK,GAAG,GAAG,CAAC;IAfyF,CAAC;IA3DtG,8DAA8D;IAE9D,yCAAc,GAAd,UAAe,KAAK,EAAE,QAA0B;QAC9C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9D,0EAA0E;QAC1E,0DAA0D;QAC1D,sBAAsB;QACtB,sKAAsK;QACtK,yCAAyC;QACzC,KAAK;IACP,CAAC;IAID,kCAAO,GAAP;QAAA,iBAgBC;QAfC,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACvC,IAAI,MAAM,GAAG,yDAAyD,CAAC;YACvE,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC;iBAClB,SAAS,EAAE;iBACX,IAAI,CACH,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CACF,CAAC;YACJ,UAAU,CAAC;gBACT,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,wCAAa,GAAb,UAAc,EAAU;QAAxB,iBAwBC;QAtBC,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAE5C,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACvC,IAAI,MAAM,GAAG,+CAA+C,CAAC;YAC7D,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;oBACvB,cAAc,EAAE,kBAAkB;iBACnC,CAAC;gBACF,MAAM,EAAE,MAAM;aACf,CAAC;iBACC,SAAS,EAAE;iBACX,IAAI,CACH,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CACF,CAAC;YACJ,UAAU,CAAC;gBACT,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAGD,mCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,MAAM,GAAG,IAAI,+DAAe,EAAE,CAAC;QAEpC,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAC,IAAI;YACvB,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAS,GAAT,UAAU,QAA0B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC;QACzE,wBAAwB;IACzB,CAAC;IAKD,oCAAS,GAAT,UAAU,IAAY;QACpB,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACpC,IAAI,aAAa,GAAG,2DAA2D,CAAC;QAChF,IAAI,UAAU,GAAI,wDAAwD,CAAC;QAC3E,IAAI,GAAG,GAAG,UAAU,CAAC;QACrB,IAAI,IAAI,CAAC,KAAK,IAAE,GAAG,EAAE;YACnB,GAAG,GAAG,aAAa,CAAC;SACrB;QACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAExB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,EAC7B;YACE,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC,CAAC,SAAS,CAAC,kBAAQ;QAErB,CAAC,EAAE,aAAG;QACN,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IA7IU,gBAAgB;QAJ5B,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;;SAEtC,CAAC;yCAsG4B,sDAAM,EAAgB,+DAAU,EAAwB,kEAAc;OArGvF,gBAAgB,CA8I5B;IAAD,uBAAC;CAAA;AA9I4B;AAgJ7B;IAEE,gBACS,MAAc,EACd,WAAmB,EACnB,WAAmB,EACnB,UAAkB,EAClB,KAAa,EACb,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,KAAa,EACb,GAAW;QATX,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAQ;QACnB,gBAAW,GAAX,WAAW,CAAQ;QACnB,eAAU,GAAV,UAAU,CAAQ;QAClB,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAQ;QACZ,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAQ;QACb,QAAG,GAAH,GAAG,CAAQ;IAChB,CAAC;IAEP,aAAC;AAAD,CAAC;;;;;;;;;;;;;AC3KD,8qFAA8qF,47D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/mF;AACW;AACzB;AACI;AAEH;AAOlD;IAkEE,iCAAoB,KAAqB,EAAU,IAAgB,EAAU,YAA4B;QAArF,UAAK,GAAL,KAAK,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAgB;QA7DzG,WAAM,GAAG,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAE5D,aAAQ,GAAG;YACT,MAAM,EAAE;gBACN,aAAa,EAAE,IAAI;aACpB;YACD,aAAa,EAAE,IAAI;YACnB,OAAO,EAAE;gBACP,GAAG,EAAE,KAAK;gBACV,IAAI,EAAE,KAAK;aACZ;YACD,OAAO,EAAE;gBACP,KAAK,EAAE;oBACL,KAAK,EAAE,IAAI;iBACZ;gBACD,KAAK,EAAE;oBACL,KAAK,EAAE,OAAO;iBACf;gBACD,KAAK,EAAE;oBACL,KAAK,EAAE,OAAO;iBACf;gBACD,QAAQ,EAAE;oBACR,KAAK,EAAE,WAAW;iBACnB;gBACD,gBAAgB,EAAE;oBAChB,KAAK,EAAE,KAAK;iBACb;gBACD,UAAU,EAAE;oBACV,KAAK,EAAE,gBAAgB;iBACxB;gBACD,KAAK,EAAE;oBACL,KAAK,EAAE,KAAK;iBACb;gBACD,IAAI,EAAE;oBACJ,KAAK,EAAE,SAAS;iBACjB;aACF;SACF,CAAC;IAwB2G,CAAC;IAtB9G,iDAAe,GAAf,UAAgB,KAAK;QAArB,iBAoBC;QAnBC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,GAAG,GAAG,4CAA4C,CAAC;QACvD,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAE9B,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAClB;YACE,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;YACF,MAAM,EAAE,MAAM;SACf,CAAC,CAAC,SAAS,CAAC,kBAAQ;QAErB,CAAC,EAAE,aAAG;QACN,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YAC9B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAID,0CAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YAClK,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,GAAG,IAAI,+DAAe,EAAE,CAAC;QAEpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YAC9B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAO,GAAP,UAAQ,EAAU;QAAlB,iBAsBC;QArBC,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QACvD,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACvC,IAAI,MAAM,GAAG,mDAAmD,CAAC;YACjE,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;oBACvB,cAAc,EAAE,kBAAkB;iBACnC,CAAC;gBACF,MAAM,EAAE,MAAM;aACf,CAAC;iBACC,SAAS,EAAE;iBACX,IAAI,CACH,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CACF,CAAC;YACJ,UAAU,CAAC;gBACT,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IACD,2CAAS,GAAT,UAAU,QAA0B;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,CAAC;QACxE,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1D,CAAC;IACD,wCAAM,GAAN;QAAA,iBAyBC;QAxBC,IAAI,GAAG,GAAG,kDAAkD,CAAC;QAE7D,IAAI,IAAI,GAAG;YACT,QAAQ,EAAE,IAAI,CAAC,EAAE;YACjB,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;YACrB,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;YACrB,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,QAAQ;YAC3B,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI;YACnB,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK;YACrB,UAAU,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU;YAC/B,gBAAgB,EAAE,IAAI,CAAC,GAAG,CAAC,gBAAgB;SAC5C;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EACtB;YACE,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC,CAAC,SAAS,CAAC,kBAAQ;QAErB,CAAC,EAAE,aAAG;QACN,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,IAAI;YAC9B,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,+CAAa,GAAb,UAAc,EAAU;QAAxB,iBA0BC;QAzBC,OAAO,EAAE,IAAI,gEAAW,CAAC;YACvB,cAAc,EAAE,kBAAkB;SACnC,CAAC,CAAC;QACH,IAAI,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEvD,IAAI,MAAM,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACvC,IAAI,MAAM,GAAG,+CAA+C,CAAC;YAC7D,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE;gBACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;oBACvB,cAAc,EAAE,kBAAkB;iBACnC,CAAC;gBACF,MAAM,EAAE,MAAM;aACf,CAAC;iBACC,SAAS,EAAE;iBACX,IAAI,CACH,aAAG;gBACD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CACF,CAAC;YACJ,UAAU,CAAC;gBACT,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,IAAI,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAvKU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;YAEzB,MAAM,EAAE,CAAC,EAAE,CAAC;SACb,CAAC;yCAmE2B,8DAAc,EAAgB,+DAAU,EAAwB,kEAAc;OAlE9F,uBAAuB,CA0KnC;IAAD,8BAAC;CAAA;AA1KmC;AA4KpC;IACE,gBACS,MAAc,EACd,WAAmB,EACnB,WAAmB,EACnB,UAAkB,EAClB,KAAa,EACb,IAAY,EACZ,IAAY,EACZ,QAAgB,EAChB,KAAa,EACb,GAAW;QATX,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAQ;QACnB,gBAAW,GAAX,WAAW,CAAQ;QACnB,eAAU,GAAV,UAAU,CAAQ;QAClB,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAQ;QACZ,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAQ;QACb,QAAG,GAAH,GAAG,CAAQ;IAChB,CAAC;IACP,aAAC;AAAD,CAAC;;AAED;IACE,aACS,QAAgB,EAChB,KAAc,EACd,KAAa,EACb,IAAU,EACV,UAAkB,EAClB,QAAgB,EAChB,KAAa,EACb,gBAAwB;QAPxB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAS;QACd,UAAK,GAAL,KAAK,CAAQ;QACb,SAAI,GAAJ,IAAI,CAAM;QACV,eAAU,GAAV,UAAU,CAAQ;QAClB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,UAAK,GAAL,KAAK,CAAQ;QACb,qBAAgB,GAAhB,gBAAgB,CAAQ;IAC7B,CAAC;IACP,UAAC;AAAD,CAAC;;;;;;;;;;;;;AClND,yFAAyF,QAAQ,yD;;;;;;;;;;;;;;;;;;;;;;;;;ACA/C;AACa;AAO/D;IAGE,4BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,qCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wCAAwC,EAAE;YACtD,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,SAAS,GAAG,KAAK;gBAClC,aAAa,EAAE,kBAAkB;aAClC,CAAC;SACH,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACnB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAjBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;YAEzB,MAAM,EAAE,CAAC,EAAE,CAAC;SACb,CAAC;yCAI0B,+DAAU;OAHzB,kBAAkB,CAkB9B;IAAD,yBAAC;CAAA;AAlB8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRU;AACE;AACW;AAGtD;IACE,mBAAoB,SAAoB,EAAU,MAAc;QAA5C,cAAS,GAAT,SAAS,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;IAChE,CAAC;IACD,+BAAW,GAAX;QACE,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAExC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAClD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAC/C,OAAO,IAAI,CAAC;SACb;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChC,OAAO,KAAK,CAAC;IACf,CAAC;IAZU,SAAS;QADrB,gEAAU,EAAE;yCAEoB,sDAAS,EAAkB,sDAAM;OADrD,SAAS,CAarB;IAAD,gBAAC;CAAA;AAbqB;;;;;;;;;;;;ACLtB,+BAA+B,oBAAoB,mBAAmB,mBAAmB,qBAAqB,uBAAuB,sBAAsB,sBAAsB,oCAAoC,yBAAyB,gCAAgC,gCAAgC,wCAAwC,qCAAqC,mCAAmC,oCAAoC,KAAK,gBAAgB,qBAAqB,gCAAgC,0BAA0B,KAAK,qCAAqC,iBAAiB,oBAAoB,uBAAuB,kCAAkC,2BAA2B,eAAe,kBAAkB,kCAAkC,0CAA0C,uCAAuC,qCAAqC,sCAAsC,OAAO,sBAAsB,kBAAkB,OAAO,sBAAsB,4BAA4B,uBAAuB,OAAO,iDAAiD,sBAAsB,kBAAkB,SAAS,4BAA4B,sBAAsB,kBAAkB,SAAS,K;;;;;;;;;;;ACA7tC,mvB;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAGE;IAEA,CAAC;IALU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;;OACW,aAAa,CAMzB;IAAD,oBAAC;CAAA;AANyB;;;;;;;;;;;;ACP1B,01B;;;;;;;;;;;;;;;;;;;;;;;;;;ACA+D;AACrB;AACD;AAOzC;IAGE,wBAAoB,MAAc,EAAU,IAAgB;QAAxC,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEjE,8BAAK,GAAL,UAAM,IAAY;QAAlB,iBAgBC;QAfC,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yCAAyC,EAAE,WAAW,EACnE;YACA,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAE,kBAAkB;aACnC,CAAC;SACH,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACnB,IAAI,KAAK,GAAS,QAAS,CAAC,KAAK,CAAC;YAClC,YAAY,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YACnC,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC,EAAE,aAAG;YACJ,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IArBU,cAAc;QAJ1B,+DAAS,CAAC;YACT,QAAQ,EAAE,OAAO;;SAElB,CAAC;yCAI4B,sDAAM,EAAgB,+DAAU;OAHjD,cAAc,CAuB1B;IAAD,qBAAC;CAAA;AAvB0B;;;;;;;;;;;;ACT3B,mB;;;;;;;;;;;ACAA,+C;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACa;AAO/D;IAEE,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,kCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAyC,EAAE;YACvD,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,eAAe,EAAE,SAAS,GAAG,KAAK;gBAClC,aAAa,EAAE,kBAAkB;aAClC,CAAC;SACH,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACnB,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC5B,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;QAClB,CAAC,CAAC,CAAC;IACL,CAAC;IAhBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAG0B,+DAAU;OAFzB,eAAe,CAkB3B;IAAD,sBAAC;CAAA;AAlB2B;;;;;;;;;;;;ACR5B,+NAA+N,uN;;;;;;;;;;;;;;;;;;;;;;;;ACArL;AAuB1C;IACE;IACA,CAAC;IAFU,eAAe;QArB3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;YAEtB,MAAM,EAAE;gBACN,+VAaE;aACH;SACF,CAAC;;OAEW,eAAe,CAG3B;IAAD,sBAAC;CAAA;AAH2B;;;;;;;;;;;;ACvB5B,+9B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0C;AACD;AACA;AAkBzC;IAEE,yBAAoB,SAAoB,EAAU,MAAc;QAA5C,cAAS,GAAT,SAAS,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;IAChE,CAAC;IAED,6CAAmB,GAAnB;QACE,IAAI,KAAK,GAAW,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAChD,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YAClD,OAAO,IAAI,CAAC;SACb;aACI;YACH,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,gCAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAjBU,eAAe;QAhB3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;YAEtB,MAAM,EAAE,CAAC,kTAWR,CAAC;SACH,CAAC;yCAG+B,sDAAS,EAAkB,sDAAM;OAFrD,eAAe,CAoB3B;IAAD,sBAAC;CAAA;AApB2B;;;;;;;;;;;;;ACpB5B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\\r\\n<app-footer></app-footer>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: []\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { AuthGuard } from './guards/auth-guard.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { JwtHelper } from 'angular2-jwt'\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { ImageUploadModule } from \"angular2-image-upload\";\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CustomersComponent } from './customers/customers.component';\r\nimport { HeaderComponent } from './shared/layout/header.component';\r\nimport { FooterComponent } from './shared/layout/footer.component';\r\nimport { OrdersComponent } from './orders/orders.component';\r\nimport { ClientsComponent } from './clients/clients.component';\r\nimport { ClientsDetailsComponent } from './clients/clientsDetails.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HomeComponent,\r\n    LoginComponent,\r\n    CustomersComponent,\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    OrdersComponent,\r\n    ClientsComponent,\r\n    ClientsDetailsComponent\r\n    \r\n  ],\r\n  imports: [\r\n    Ng2SmartTableModule,\r\n    BrowserModule,\r\n    NgxPaginationModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    ImageUploadModule.forRoot(),\r\n    RouterModule.forRoot([\r\n      { path: '', component: HomeComponent },\r\n      { path: 'orders', component: OrdersComponent },\r\n      { path: 'clients', component: ClientsComponent },\r\n      { path: 'login', component: LoginComponent },      \r\n      { path: 'customers', component: CustomersComponent, canActivate: [AuthGuard] },\r\n      { path: 'clientDetails/:id', component: ClientsDetailsComponent }\r\n    ]),\r\n    ModalModule.forRoot()\r\n  ],\r\n  providers: [JwtHelper, AuthGuard, HttpClientModule],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h2>Klienci</h2>\\r\\n\\r\\n\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(template)\\\">Dodaj klienta</button>\\r\\n<!--<a [routerLink]=\\\"['/customers', 2]\\\">Idz do klienta</a>-->\\r\\n<ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (custom)=\\\"onCustomAction($event, detailsTemplate)\\\"></ng2-smart-table>\\r\\n\\r\\n<ng-template #template>\\r\\n  <form class=\\\"form-signin\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"addClient(loginForm)\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Nowy klient</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-10 col-form-label\\\">Klient firmowy</label>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <input name=\\\"model\\\" value=\\\"1\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group row\\\">\\r\\n            <label class=\\\"col-sm-10 col-form-label\\\">Klient indywidualny</label>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <input name=\\\"model\\\" value=\\\"2\\\" type=\\\"radio\\\" [(ngModel)]=\\\"model\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Ulica</label>\\r\\n            <input name=\\\"Street\\\" id=\\\"Street\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Numer domu</label>\\r\\n            <input name=\\\"HouseNumber\\\" id=\\\"HouseNumber\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div> <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Telefon kontaktowy</label>\\r\\n            <input name=\\\"PhoneNumber\\\" id=\\\"PhoneNumber\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Kod pocztowy</label>\\r\\n            <input name=\\\"PostalCode\\\" id=\\\"PostalCode\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Mail</label>\\r\\n            <input name=\\\"Email\\\" id=\\\"Email\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Miasto</label>\\r\\n            <input name=\\\"City\\\" id=\\\"City\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Imie</label>\\r\\n            <input name=\\\"Name\\\" id=\\\"Name\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Nazwisko</label>\\r\\n            <input name=\\\"SureName\\\" id=\\\"SureName\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\" [hidden]=\\\"model == 2\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>NIP</label>\\r\\n            <input name=\\\"Nip\\\" id=\\\"Nip\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\" [hidden]=\\\"model == 2\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Regon</label>\\r\\n            <input name=\\\"Regon\\\" id=\\\"Regon\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\" [hidden]=\\\"model == 2\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Nazwa firmy</label>\\r\\n            <input name=\\\"CompanyName\\\" id=\\\"CompanyName\\\" ngModel class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Dodaj</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #detailsTemplate>\\r\\n  <form class=\\\"form-signin\\\" #detailsForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Klient</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Ulica</label>\\r\\n            <input name=\\\"Street\\\" id=\\\"Street\\\" [(ngModel)]=\\\"client.Street\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Numer domu</label>\\r\\n            <input name=\\\"HouseNumber\\\" id=\\\"HouseNumber\\\" [(ngModel)]=\\\"client.HouseNumber\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div> <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Telefon kontaktowy</label>\\r\\n            <input name=\\\"PhoneNumber\\\" id=\\\"PhoneNumber\\\" [(ngModel)]=\\\"client.PhoneNumber\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Kod pocztowy</label>\\r\\n            <input name=\\\"PostalCode\\\" id=\\\"PostalCode\\\" [(ngModel)]=\\\"client.PostalCode\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Mail</label>\\r\\n            <input name=\\\"Email\\\" id=\\\"Email\\\" [(ngModel)]=\\\"client.Email\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Miasto</label>\\r\\n            <input name=\\\"City\\\" id=\\\"City\\\" [(ngModel)]=\\\"client.City\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Imie</label>\\r\\n            <input name=\\\"Name\\\" id=\\\"Name\\\" [(ngModel)]=\\\"client.Name\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Nazwisko</label>\\r\\n            <input name=\\\"SureName\\\" id=\\\"SureName\\\" [(ngModel)]=\\\"client.SureName\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>NIP</label>\\r\\n            <input name=\\\"Nip\\\" id=\\\"Nip\\\" [(ngModel)]=\\\"client.Nip\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Regon</label>\\r\\n            <input name=\\\"Regon\\\" id=\\\"Regon\\\" [(ngModel)]=\\\"client.Regon\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label>Nazwa firmy</label>\\r\\n            <input name=\\\"CompanyName\\\" id=\\\"CompanyName\\\" [(ngModel)]=\\\"client.Name\\\" class=\\\"form-control\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Dodaj</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\\r\\n\"","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Component, TemplateRef, ViewChild, OnInit } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\n@Component({\r\n  selector: 'demo-modal-service-static',\r\n  templateUrl: './clients.component.html', \r\n})\r\nexport class ClientsComponent implements OnInit {\r\n  source: LocalDataSource;\r\n  modalRef: BsModalRef;\r\n\r\n  settings = {\r\n    hideSubHeader: true,\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n      custom: [{ name: 'ourCustomAction', title: 'Szczegóły ' }],\r\n    },\r\n    columns: {\r\n      clinetId: {\r\n        title: 'ID'\r\n      },\r\n      name: {\r\n        title: 'Full Name'\r\n      },\r\n      surename: {\r\n        title: 'User Name'\r\n      },\r\n      email: {\r\n        title: 'Email'\r\n      },\r\n      city: {\r\n        title: 'Miasto'\r\n      },\r\n      postalCode: {\r\n        title: 'Kod pocztowy'\r\n      },\r\n      street: {\r\n        title: 'Ulica'\r\n      },\r\n      houseNumber: {\r\n        title: 'Numer domu'\r\n      },\r\n      phoneNumber: {\r\n        title: 'Tel.'\r\n      },\r\n    }\r\n  };\r\n\r\n  //client = new Client('', '', '', '', '', '', '', '', '', '');\r\n\r\n  onCustomAction(event, template: TemplateRef<any>) {\r\n    console.log(event.data.clinetId);\r\n    this.router.navigate(['/clientDetails', event.data.clinetId]);\r\n    //this.modalRef = this.modalService.show(template, { class: 'modal-lg' });\r\n    //this.getClientById(event.data.clinetId).then((data) => {\r\n    //  console.log(data);\r\n    //  this.client = new Client(data.street, data.houseNumber, data.phoneNumber, data.postalCode, data.email, data.city, data.name, data.surename, data.regon, data.nip);\r\n    //  console.log(\"utworzono nowy obiekt\");\r\n    //});\r\n  }\r\n\r\n\r\n  dane: any[];\r\n  getData(): Promise<any> {\r\n    let promis = new Promise((resolve, reject) => {\r\n      let apiURL = \"http://acs.hostingasp.pl/api/client/GetCompanyCustomers\";\r\n      this.http.get(apiURL)\r\n        .toPromise()\r\n        .then(\r\n          res => { // Success\r\n            console.log(res);\r\n            resolve(res);\r\n          }\r\n        );\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 2000);\r\n    });\r\n    return promis;\r\n  }\r\n\r\n  getClientById(id: string): Promise<any> {\r\n\r\n    let params = new HttpParams().set(\"id\", id);\r\n\r\n    let promis = new Promise((resolve, reject) => {\r\n      let apiURL = \"http://acs.hostingasp.pl/api/client/GetClient\";\r\n      this.http.get(apiURL, {\r\n        headers: new HttpHeaders({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        params: params\r\n      })\r\n        .toPromise()\r\n        .then(\r\n          res => { // Success\r\n            console.log(res);\r\n            resolve(res);\r\n          }\r\n        );\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 2000);\r\n    });\r\n    return promis;\r\n  }\r\n\r\n  constructor(private router: Router, private http: HttpClient, private modalService: BsModalService) {}\r\n  ngOnInit() {\r\n    this.source = new LocalDataSource();\r\n\r\n    this.getData().then((data) => {\r\n      this.source.load(data);\r\n    });\r\n  }\r\n \r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-lg' });\r\n   // model = new Client();\r\n  }\r\n\r\n  model1 = { options: '2' };\r\n  model = '1';\r\n\r\n  addClient(form: NgForm) {\r\n    let credentials = JSON.stringify(form.value);\r\n\r\n    console.log(form.value.PhoneNumber);\r\n    var urlIndividual = \"http://acs.hostingasp.pl/api/client/AddIndividualCustomer\";\r\n    var urlCompany =  \"http://acs.hostingasp.pl/api/client/AddCompanyCustomer\";\r\n    let url = urlCompany;\r\n    if (this.model==\"2\") {\r\n      url = urlIndividual;\r\n    }\r\n    console.log(this.model);\r\n\r\n    this.http.post(url, credentials,     \r\n      {\r\n        headers: new HttpHeaders({\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      }).subscribe(response => {      \r\n        \r\n      }, err => {\r\n      });\r\n\r\n    this.ngOnInit();\r\n  }\r\n}\r\n\r\nexport class Client {\r\n\r\n  constructor(\r\n    public Street: string,\r\n    public HouseNumber: string,\r\n    public PhoneNumber: string,\r\n    public PostalCode: string,\r\n    public Email: string,\r\n    public City: string,\r\n    public Name: string,\r\n    public SureName: string,\r\n    public Regon: string,\r\n    public Nip: string,\r\n  ) { }\r\n\r\n}\r\n","module.exports = \"\\r\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(newCar)\\\">Dodaj samochód klienta</button>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>Ulica</label>\\r\\n    <input name=\\\"Street\\\" id=\\\"Street\\\" [(ngModel)]=\\\"client.Street\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>Numer domu</label>\\r\\n    <input name=\\\"HouseNumber\\\" id=\\\"HouseNumber\\\" [(ngModel)]=\\\"client.HouseNumber\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n</div> <div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>Telefon kontaktowy</label>\\r\\n    <input name=\\\"PhoneNumber\\\" id=\\\"PhoneNumber\\\" [(ngModel)]=\\\"client.PhoneNumber\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>Kod pocztowy</label>\\r\\n    <input name=\\\"PostalCode\\\" id=\\\"PostalCode\\\" [(ngModel)]=\\\"client.PostalCode\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>Mail</label>\\r\\n    <input name=\\\"Email\\\" id=\\\"Email\\\" [(ngModel)]=\\\"client.Email\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>Miasto</label>\\r\\n    <input name=\\\"City\\\" id=\\\"City\\\" [(ngModel)]=\\\"client.City\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>Imie</label>\\r\\n    <input name=\\\"Name\\\" id=\\\"Name\\\" [(ngModel)]=\\\"client.Name\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n\\r\\n    <label>Nazwisko</label>\\r\\n    <input name=\\\"SureName\\\" id=\\\"SureName\\\" [(ngModel)]=\\\"client.SureName\\\" class=\\\"form-control\\\">\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>NIP</label>\\r\\n    <input name=\\\"Nip\\\" id=\\\"Nip\\\" [(ngModel)]=\\\"client.Nip\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>Regon</label>\\r\\n    <input name=\\\"Regon\\\" id=\\\"Regon\\\" [(ngModel)]=\\\"client.Regon\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-6\\\">\\r\\n    <label>Nazwa firmy</label>\\r\\n    <input name=\\\"CompanyName\\\" id=\\\"CompanyName\\\" [(ngModel)]=\\\"client.Name\\\" class=\\\"form-control\\\">\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng2-smart-table [settings]=\\\"settings\\\" [source]=\\\"source\\\" (deleteConfirm)=\\\"onDeleteConfirm($event)\\\"></ng2-smart-table>\\r\\n<ng-template #newCar>\\r\\n  <form class=\\\"form-signin\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"addCar()\\\">\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title pull-left\\\">Nowy klient</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <label>Marka</label>\\r\\n          <input name=\\\"Marka\\\" id=\\\"Marka\\\" [(ngModel)]=\\\"car.Brand\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <label>Model</label>\\r\\n          <input name=\\\"Model\\\" id=\\\"Model\\\" [(ngModel)]=\\\"car.Model\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <label>Rodzaj silnika</label>\\r\\n          <input name=\\\"RodzajSilnika\\\" id=\\\"RodzajSilnika\\\" [(ngModel)]=\\\"car.EngineType\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <label>Rocznik</label>\\r\\n          <input name=\\\"Rocznik\\\" id=\\\"Rocznik\\\" type='date' [(ngModel)]=\\\"car.Year\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <label>Pojemnosc</label>\\r\\n          <input name=\\\"Pojemnosc\\\" id=\\\"Pojemnosc\\\" [(ngModel)]=\\\"car.Capacity\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <label>Moc</label>\\r\\n          <input name=\\\"Moc\\\" id=\\\"Moc\\\" [(ngModel)]=\\\"car.Power\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-lg-6\\\">\\r\\n          <label>Vin</label>\\r\\n          <input name=\\\"Vin\\\" id=\\\"Vin\\\" [(ngModel)]=\\\"car.CarIdentificator\\\" class=\\\"form-control\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" (click)=\\\"modalRef.hide()\\\">Dodaj</button>\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</ng-template>\\r\\n<a routerLink=\\\"/\\\">Powrót</a>\\r\\n\"","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BsModalService } from 'ngx-bootstrap/modal';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal/bs-modal-ref.service';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './clientsDetails.component.html',\r\n  styles: [``]\r\n})\r\nexport class ClientsDetailsComponent implements OnInit {\r\n  modalRef: BsModalRef;\r\n  source: LocalDataSource;\r\n  customers: any;\r\n  id: number;\r\n  client = new Client('', '', '', '', '', '', '', '', '', '');\r\n  car: Car;\r\n  settings = {\r\n    delete: {\r\n      confirmDelete: true,\r\n    },\r\n    hideSubHeader: true,\r\n    actions: {\r\n      add: false,\r\n      edit: false,\r\n    },\r\n    columns: {      \r\n      carId: {\r\n        title: 'ID'\r\n      },\r\n      brand: {\r\n        title: 'Marka'\r\n      },\r\n      model: {\r\n        title: 'Model'\r\n      },\r\n      capacity: {\r\n        title: 'Pojemność'\r\n      },\r\n      carIdentificator: {\r\n        title: 'VIN'\r\n      },\r\n      engineType: {\r\n        title: 'Rodzaj silnika'\r\n      },\r\n      power: {\r\n        title: 'Moc'\r\n      },\r\n      year: {\r\n        title: 'Rocznik'\r\n      }\r\n    }\r\n  };\r\n\r\n  onDeleteConfirm(event) {\r\n    console.log(event);\r\n    let url = \"http://acs.hostingasp.pl/api/car/DeleteCar\";\r\n    let params = new HttpParams().set(\"id\", event.data.carId);\r\n    console.log(event.data.carId);\r\n\r\n    this.http.delete(url,\r\n      {\r\n        headers: new HttpHeaders({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        params: params\r\n      }).subscribe(response => {\r\n\r\n      }, err => {\r\n      });\r\n    this.getCars(this.id).then((data) => {\r\n      this.source.load(data);\r\n    });\r\n    this.ngOnInit();\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute, private http: HttpClient, private modalService: BsModalService) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.id = +params['id'];\r\n      console.log(this.id);\r\n    });\r\n    this.getClientById(this.id).then((data) => {\r\n      console.log(data);\r\n      this.client = new Client(data.street, data.houseNumber, data.phoneNumber, data.postalCode, data.email, data.city, data.name, data.surename, data.regon, data.nip);\r\n      console.log(\"utworzono nowy obiekt\");\r\n    });\r\n\r\n    this.source = new LocalDataSource();\r\n\r\n    this.getCars(this.id).then((data) => {\r\n      this.source.load(data);\r\n      console.log(data);\r\n    });\r\n  }\r\n  getCars(id: number): Promise<any> {\r\n    let params = new HttpParams().set(\"id\", id.toString());\r\n    let promis = new Promise((resolve, reject) => {\r\n      let apiURL = \"http://acs.hostingasp.pl/api/car/GetCarsForClient\";\r\n      this.http.get(apiURL, {\r\n        headers: new HttpHeaders({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        params: params\r\n      })\r\n        .toPromise()\r\n        .then(\r\n          res => { // Success\r\n            console.log(res);\r\n            resolve(res);\r\n          }\r\n        );\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 2000);\r\n    });\r\n    return promis;\r\n  }\r\n  openModal(template: TemplateRef<any>) {\r\n    this.modalRef = this.modalService.show(template, { class: 'modal-lg' });\r\n    this.car = new Car(0, '', '', new Date(), '', 0, 0, '');\r\n  }\r\n  addCar() {\r\n    let url = \"http://acs.hostingasp.pl/api/car/AddCarForClient\";\r\n\r\n    var body = {\r\n      ClientId: this.id,\r\n      Model: this.car.Model,\r\n      Brand: this.car.Brand,\r\n      Capacity: this.car.Capacity,\r\n      Year: this.car.Year,\r\n      Power: this.car.Power,\r\n      EngineType: this.car.EngineType,\r\n      CarIdentificator: this.car.CarIdentificator\r\n    }\r\n    this.http.post(url, body,\r\n      {\r\n        headers: new HttpHeaders({\r\n          \"Content-Type\": \"application/json\"\r\n        })\r\n      }).subscribe(response => {\r\n\r\n      }, err => {\r\n      });\r\n    this.getCars(this.id).then((data) => {\r\n      this.source.load(data);\r\n    });\r\n  }\r\n\r\n\r\n  getClientById(id: number): Promise<any> {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\"\r\n    });\r\n    let params = new HttpParams().set(\"id\", id.toString());\r\n\r\n    let promis = new Promise((resolve, reject) => {\r\n      let apiURL = \"http://acs.hostingasp.pl/api/client/GetClient\";\r\n      this.http.get(apiURL, {\r\n        headers: new HttpHeaders({\r\n          \"Content-Type\": \"application/json\",\r\n        }),\r\n        params: params\r\n      })\r\n        .toPromise()\r\n        .then(\r\n          res => { \r\n            console.log(res);\r\n            resolve(res);\r\n          }\r\n        );\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 2000);\r\n    });\r\n    return promis;\r\n  }\r\n\r\n  \r\n}\r\n\r\nexport class Client {\r\n  constructor(\r\n    public Street: string,\r\n    public HouseNumber: string,\r\n    public PhoneNumber: string,\r\n    public PostalCode: string,\r\n    public Email: string,\r\n    public City: string,\r\n    public Name: string,\r\n    public SureName: string,\r\n    public Regon: string,\r\n    public Nip: string,\r\n  ) { }\r\n}\r\n\r\nexport class Car {\r\n  constructor(\r\n    public ClientId: number,\r\n    public Brand : string,\r\n    public Model: string,\r\n    public Year: Date,\r\n    public EngineType: string,\r\n    public Capacity: number,\r\n    public Power: number,\r\n    public CarIdentificator: string,\r\n  ) { }\r\n}\r\n","module.exports = \"<h1>Customers</h1>\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let cust of customers\\\">{{ cust }}</li>\\r\\n</ul>\\r\\n\\r\\n<a routerLink=\\\"/\\\">Powrót</a>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-customers',\r\n  templateUrl: './customers.component.html',\r\n  styles: [``]\r\n})\r\nexport class CustomersComponent implements OnInit {\r\n  customers: any;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    let token = localStorage.getItem(\"jwt\");\r\n    this.http.get(\"http://acs.hostingasp.pl/api/customers\", {\r\n      headers: new HttpHeaders({\r\n        \"Authorization\": \"Bearer \" + token,\r\n        \"assets-Type\": \"application/json\"\r\n      })\r\n    }).subscribe(response => {\r\n      this.customers = response;\r\n    }, err => {\r\n      console.log(err)\r\n    });\r\n  }\r\n}\r\n","import { JwtHelper } from 'angular2-jwt';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private jwtHelper: JwtHelper, private router: Router) {\r\n  }\r\n  canActivate() {\r\n    var token = localStorage.getItem(\"jwt\");\r\n\r\n    if (token && !this.jwtHelper.isTokenExpired(token)) {\r\n      console.log(this.jwtHelper.decodeToken(token));\r\n      return true;\r\n    }\r\n    this.router.navigate([\"login\"]);\r\n    return false;\r\n  }\r\n}\r\n","module.exports = \"\\r\\n.myButt {\\r\\n  outline: none;\\r\\n  border: none;\\r\\n  padding: 0px;\\r\\n  display: block;\\r\\n  margin: 0px auto;\\r\\n  cursor: pointer;\\r\\n  font-size: 20px;\\r\\n  background-color: transparent;\\r\\n  position: relative;\\r\\n  border: 2px solid #07324f;\\r\\n  transition: all 0.5s ease;\\r\\n  -webkit-transition: all 0.5s ease;\\r\\n  -moz-transition: all 0.5s ease;\\r\\n  -o-transition: all 0.5s ease;\\r\\n  -ms-transition: all 0.5s ease;\\r\\n}\\r\\n\\r\\n.three {\\r\\n  color: #07324f;\\r\\n  border-color: transparent;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.three:before, .three:after {\\r\\n    width: 0;\\r\\n    height: 3px;\\r\\n    content: \\\" \\\";\\r\\n    background-color: #07324f;\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 50%;\\r\\n    transition: all 0.3s ease;\\r\\n    -webkit-transition: all 0.3s ease;\\r\\n    -moz-transition: all 0.3s ease;\\r\\n    -o-transition: all 0.3s ease;\\r\\n    -ms-transition: all 0.3s ease;\\r\\n  }\\r\\n\\r\\n.three:after {\\r\\n    top: 100%;\\r\\n  }\\r\\n\\r\\n.three:hover {\\r\\n    letter-spacing: 8px;\\r\\n    color: #07324f;\\r\\n  }\\r\\n\\r\\n.three:hover:before, .three:after:hover {\\r\\n      width: 100%;\\r\\n      left: 0;\\r\\n    }\\r\\n\\r\\n.three:hover:after {\\r\\n      width: 100%;\\r\\n      left: 0;\\r\\n    }\\r\\n\"","module.exports = \"<section>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <a class='myButt three btn' routerLink=\\\"/orders\\\">\\r\\n        <img src=\\\"../../assets/orders.png\\\" />\\r\\n        <p>\\r\\n          Zlecenia\\r\\n        </p>\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <a class='myButt three btn' routerLink=\\\"/clients\\\">\\r\\n        <img src=\\\"../../assets/car.png\\\" />\\r\\n        <p>\\r\\n          Samochody\\r\\n        </p>\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <a class='myButt three btn' routerLink=\\\"/clients\\\">\\r\\n        <img src=\\\"../../assets/owner.png\\\"/>\\r\\n        <p>\\r\\n          Klienci\\r\\n        </p>\\r\\n      </a>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n\r\n\r\n  constructor() {\r\n\r\n  }\r\n}\r\n","module.exports = \"<form class=\\\"form-signin\\\" #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login(loginForm)\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <h2 class=\\\"form-signin-heading\\\">Login</h2>\\r\\n    <div *ngIf=\\\"invalidLogin\\\" class=\\\"alert alert-danger\\\">Niewłaściwy login lub hasło.</div>\\r\\n    <br />\\r\\n    <label for=\\\"username\\\" class=\\\"sr-only\\\">Adres email</label>\\r\\n    <input type=\\\"email\\\" id=\\\"username\\\" name=\\\"username\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Nazwa użytkownika\\\" required autofocus>\\r\\n    <br />\\r\\n    <label for=\\\"password\\\" class=\\\"sr-only\\\">Hasło</label>\\r\\n    <input type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\" ngModel class=\\\"form-control\\\" placeholder=\\\"Hasło\\\" required>\\r\\n    <br />\\r\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Zaloguj</button>\\r\\n  </div>\\r\\n</form>\\r\\n\"","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from \"@angular/router\";\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n  invalidLogin: boolean;\r\n\r\n  constructor(private router: Router, private http: HttpClient) { }\r\n\r\n  login(form: NgForm) {\r\n    let credentials = JSON.stringify(form.value);\r\n    console.log(credentials);\r\n    this.http.post(\"http://acs.hostingasp.pl/api/auth/login\", credentials,\r\n      {\r\n      headers: new HttpHeaders({\r\n        \"Content-Type\": \"application/json\"\r\n      })\r\n    }).subscribe(response => {\r\n      let token = (<any>response).token;\r\n      localStorage.setItem(\"jwt\", token);\r\n      this.invalidLogin = false;\r\n      this.router.navigate([\"/\"]);\r\n    }, err => {\r\n      this.invalidLogin = true;\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  orders works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  customers: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit() {\r\n    let token = localStorage.getItem(\"jwt\");\r\n    this.http.get(\"http://acs.hostingasp.pl/api/client/get\", {\r\n      headers: new HttpHeaders({\r\n        \"Authorization\": \"Bearer \" + token,\r\n        \"assets-Type\": \"application/json\"\r\n      })\r\n    }).subscribe(response => {\r\n      this.customers = response;\r\n    }, err => {\r\n      console.log(err)\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<footer class=\\\"footer\\\">\\r\\n  <div class=\\\"content has-text-centered\\\">\\r\\n    <strong>Warsztat</strong> by <a href=\\\"https://github.com/MateuszStanik/BoatsAdvertsApp\\\">Mateusz Stanik</a>\\r\\n    <p>&copy; 2018 - Warsztat</p>\\r\\n    <p>\\r\\n      <a class=\\\"icon\\\" href=\\\"https://github.com/MateuszStanik/BoatsAdvertsApp\\\">\\r\\n        <i class=\\\"fa fa-github\\\"></i>\\r\\n      </a>\\r\\n    </p>\\r\\n  </div>\\r\\n</footer>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styles: [\r\n    `.footer {\r\n      background-color: #07324f;\r\n      color: #fff;\r\n      padding: 1.5rem;\r\n      -webkit-background-size: cover;\r\n      -moz-background-size: cover;\r\n      -o-background-size: cover;\r\n      background-size: cover;\r\n      margin-top: 50px;\r\n      /*position:relative;*/\r\n    }\r\n    .has-text-centered {\r\n      text-align: center;\r\n    }`\r\n  ]\r\n})\r\n\r\nexport class FooterComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","module.exports = \"<!--<div class=\\\"image-wrapper\\\"></div>-->\\r\\n<div class=\\\"row\\\">\\r\\n  <a class=\\\"navbar-brand\\\" style=\\\"text-align: center\\\" href=\\\"#\\\">Auto Centrum Serwis</a>\\r\\n</div>\\r\\n\\r\\n<nav class=\\\"navbar navbar-inverse navbar-fixed-top\\\">\\r\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">Warsztat</a>\\r\\n  <div class=\\\"navbar-expand mr-auto\\\">\\r\\n    <div class=\\\"navbar-nav\\\">\\r\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/orders\\\">Zlecenia</a>\\r\\n      <a class=\\\"nav-item nav-link\\\" routerLink=\\\"/clients\\\">Klienci</a>     \\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\r\\n    <div class=\\\"navbar-nav\\\">\\r\\n      <a class=\\\"nav-item nav-link\\\" *ngIf=\\\"!isUserAuthenticated()\\\" routerLink=\\\"/login\\\"><i class=\\\"fa fa-user\\\"></i> Zaloguj</a>\\r\\n      <a class=\\\"nav-item nav-link\\\" *ngIf=\\\"isUserAuthenticated()\\\" routerLink=\\\"/\\\" (click)=\\\"logOut()\\\"><i class=\\\"fa fa-user\\\"></i> Wyloguj</a>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\nimport { JwtHelper } from 'angular2-jwt';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styles: [`\r\n    .image-wrapper{\r\n     background: url('./../assets/header1.jpg') no-repeat center center; \r\n    -webkit-background-size: cover;\r\n    -moz-background-size: cover;\r\n    -o-background-size: cover;\r\n    background-size: cover;\r\n    height: 304px;\r\n    display:block;\r\n    /*padding-top:30px;*/\r\n  }\r\n  `]\r\n})\r\nexport class HeaderComponent {\r\n\r\n  constructor(private jwtHelper: JwtHelper, private router: Router) {\r\n  }\r\n\r\n  isUserAuthenticated() {\r\n    let token: string = localStorage.getItem(\"jwt\");\r\n    if (token && !this.jwtHelper.isTokenExpired(token)) {\r\n      return true;\r\n    }\r\n    else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    localStorage.removeItem(\"jwt\");\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}